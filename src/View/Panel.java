/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;
import Model.DoublyLinkedList;
import Model.Json_files;
import Model.Symbols_Json;
import Model.GraficaBarras;
import Model.GraficaPie;
import AnalizadorStatPy.Generador;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;

import AnalizadorJson.Generador_Json;
import java.io.File;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;



/**
 *
 * @author Krpi
 */
public class Panel extends javax.swing.JFrame {

    /**
     * Creates new form Panel
     */
    public Panel() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        FileNameExtensionFilter imgFilter = new FileNameExtensionFilter("Json & sp", "json", "sp");
        jFileChooser1.setFileFilter(imgFilter);
        jDialog1 = new javax.swing.JDialog();
        Etiqueda_Analizador = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Entrada = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        Salida = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Archivo_StatPY = new javax.swing.JMenuItem();
        Archivo_json = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        Guardar_como = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Analizador_StatPY = new javax.swing.JMenuItem();
        Analizador_json = new javax.swing.JMenuItem();
        Ejecutar = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Etiqueda_Analizador.setText("Analizador: StatPY");

        jLabel5.setText("Entrada");

        Entrada.setColumns(20);
        Entrada.setRows(5);
        jScrollPane3.setViewportView(Entrada);

        Salida.setEditable(false);
        Salida.setColumns(20);
        Salida.setRows(5);
        jScrollPane4.setViewportView(Salida);

        jLabel6.setText("Salida");

        jMenu1.setText("Archivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        Archivo_StatPY.setText("Archivo StatPY");
        jMenu1.add(Archivo_StatPY);

        Archivo_json.setText("Archivo Json");
        Archivo_json.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Archivo_jsonActionPerformed(evt);
            }
        });
        jMenu1.add(Archivo_json);

        guardar.setText("Guardar");
        jMenu1.add(guardar);

        Guardar_como.setText("Guardar Como");
        jMenu1.add(Guardar_como);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Analizador");

        Analizador_StatPY.setText("Analizador StatPY");
        Analizador_StatPY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Analizador_StatPYActionPerformed(evt);
            }
        });
        jMenu2.add(Analizador_StatPY);

        Analizador_json.setText("Analizador Json");
        Analizador_json.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Analizador_jsonActionPerformed(evt);
            }
        });
        jMenu2.add(Analizador_json);

        jMenuBar1.add(jMenu2);

        Ejecutar.setText("Ejecutar");
        Ejecutar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EjecutarMouseClicked(evt);
            }
        });
        Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarActionPerformed(evt);
            }
        });
        jMenuBar1.add(Ejecutar);

        jMenu4.setText("Reporte");

        jMenuItem1.setText("Reporte de Tokens");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText("Reporte de Errores Léxicos");
        jMenu4.add(jMenuItem2);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Etiqueda_Analizador)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Etiqueda_Analizador, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Analizador_StatPYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Analizador_StatPYActionPerformed
        Etiqueda_Analizador.setText("Analizador: StatPY");
        
    }//GEN-LAST:event_Analizador_StatPYActionPerformed
    private static String loadJsonFile(File file) {
        StringBuilder jsonContent = new StringBuilder();

        try {
            // Leer el contenido del archivo JSON en un StringBuilder
            java.util.Scanner scanner = new java.util.Scanner(file);
            while (scanner.hasNextLine()) {
                jsonContent.append(scanner.nextLine()).append('\n');
            }
            scanner.close();
        } catch (java.io.FileNotFoundException e) {
            e.printStackTrace();
        }

        return jsonContent.toString();
    }
    

    private void Archivo_jsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Archivo_jsonActionPerformed
        
        int result = jFileChooser1.showOpenDialog(new JFrame());
        if (result == jFileChooser1.APPROVE_OPTION) {
            // Obtener el archivo seleccionado
            File selectedFile = jFileChooser1.getSelectedFile();
            file_name = jFileChooser1.getDescription(selectedFile);
            list_json_files.Insertar_Symbolo(new Json_files(file_name));
            
            // Llamar a un método para cargar y convertir el contenido del archivo JSON a una cadena
            String jsonContent = loadJsonFile(selectedFile);

            // Imprimir la cadena JSON en la consola
            Entrada.setText(jsonContent);
        }

        // Cerrar la ventana
        
    }//GEN-LAST:event_Archivo_jsonActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarActionPerformed
        
    }//GEN-LAST:event_EjecutarActionPerformed

    private void Analizador_jsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Analizador_jsonActionPerformed
        Etiqueda_Analizador.setText("Analizador: Json");
    }//GEN-LAST:event_Analizador_jsonActionPerformed

    private void EjecutarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EjecutarMouseClicked
        
        if (Etiqueda_Analizador.getText().equalsIgnoreCase("analizador: statpy")){
            String codigo_fuente = Entrada.getText();
            Generador gen = new Generador();
            Salida.setText(gen.Ejecutar(codigo_fuente, list_D_G,list_json_files,grafica_barras,grafica_pie));
            if (grafica_barras.Get_Titulo().equalsIgnoreCase("")) {
                
            }else{
                Jfreechart_Barras();
            }
            if (grafica_pie.Get_Titulo().equalsIgnoreCase("")){
            
            }else{
                Jfreechart_Pie();
            }
            
            grafica_pie = new GraficaPie();
            grafica_barras = new GraficaBarras();
            list_D_G = new DoublyLinkedList();
        }
        else{
            if (file_name.equals("")){
                JOptionPane.showMessageDialog(null, "No hay ni un archivo cargado", "Error",ERROR_MESSAGE);  
            }else{
                DoublyLinkedList list_json = list_json_files.Get_List_json(file_name);
                String codigo_fuente = Entrada.getText();
                Generador_Json gen = new Generador_Json();   
                gen.Ejecutar(codigo_fuente, list_json);
                String out = list_json_files.Iterar_Archivos_json(file_name);
                Salida.setText(out);
                file_name = "";
            }
           
            
            
        }
    }//GEN-LAST:event_EjecutarMouseClicked
    public void Jfreechart_Barras(){
        DefaultCategoryDataset dataset = grafica_barras.Get_Ejex().valores_list_grafica_barras(grafica_barras.Get_valores());
        JFreeChart chart = ChartFactory.createBarChart(
        grafica_barras.Get_Titulo(), // Título del gráfico
        grafica_barras.Get_Titulox(), // Etiqueta del eje X (horizontal)
        grafica_barras.Get_Tituloy(), // Etiqueta del eje Y (vertical)
        dataset, // Dataset de los datos
        PlotOrientation.VERTICAL, // Orientación de las barras (VERTICAL o HORIZONTAL)
        true, // Mostrar leyenda
        true, // Mostrar tooltips
        false // Mostrar URLs
        );
        ChartFrame frame = new ChartFrame("Gráfica de Barras", chart);
        frame.setSize(750, 450);
        frame.setVisible(true);
        
        
    }
    public void Jfreechart_Pie(){
        DefaultPieDataset dataset = grafica_pie.Get_Ejex().valores_list_grafica_pie(grafica_pie.Get_valores());
        JFreeChart chart = ChartFactory.createPieChart(grafica_pie.Get_Titulo(), dataset,true,true,true);
        ChartFrame frame = new ChartFrame("Gráfica de Pie", chart);
        frame.setSize(750, 450);
        frame.setVisible(true);
        
        
    }
    /**
     * @param args the command line arguments
     */
    public void Ejecutar_Panel() {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Panel().setVisible(true);
            }
        });
    }
    private DoublyLinkedList list_D_G = new DoublyLinkedList();
    private DoublyLinkedList list_json_files = new DoublyLinkedList();
    private GraficaBarras grafica_barras = new GraficaBarras();
    private GraficaPie grafica_pie = new GraficaPie();
    private String file_name = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Analizador_StatPY;
    private javax.swing.JMenuItem Analizador_json;
    private javax.swing.JMenuItem Archivo_StatPY;
    private javax.swing.JMenuItem Archivo_json;
    private javax.swing.JMenu Ejecutar;
    private javax.swing.JTextArea Entrada;
    private javax.swing.JLabel Etiqueda_Analizador;
    private javax.swing.JMenuItem Guardar_como;
    private javax.swing.JTextArea Salida;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
